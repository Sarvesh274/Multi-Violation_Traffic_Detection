# -*- coding: utf-8 -*-
"""YOLO11CustomObjectDetectionCompleteFile.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jkf9k6akhm1cnwcOIup9G_h2bW6HROPq

#**How to Train YOLO11 Object Detection Model on a Custom Dataset**
"""

!nvidia-smi

"""**Step 01 # Install the Ultralytics Package**"""

!pip install ultralytics

"""**Step 02 # Import All the Requried Libraries**"""

import ultralytics
ultralytics.checks()

from ultralytics import YOLO
from IPython.display import Image

"""**Step # 03 Download Dataset from Roboflow**"""

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="sCoQ1oYiNNK5RxMwVs72")
project = rf.workspace("project-uyrxf").project("ppe_detection-v1x3l")
version = project.version(2)
dataset = version.download("yolov11")

dataset.location

"""**Step # 04 Train YOLO11 Model on a Custom Dataset**"""

!yolo task=detect mode=train data={dataset.location}/data.yaml model="yolo11n.pt" epochs=40 imgsz=640

"""**Step # 05 Examine Training Results**"""

Image("/content/runs/detect/train3/P_curve.png", width=600)

Image("/content/runs/detect/train3/R_curve.png", width=600)

Image("/content/runs/detect/train3/confusion_matrix.png", width=600)

Image("/content/runs/detect/train3/confusion_matrix_normalized.png", width=600)

Image("/content/runs/detect/train3/labels.jpg", width=600)

Image("/content/runs/detect/train3/results.png", width=600)

Image("/content/runs/detect/train3/train_batch0.jpg", width=600)

Image("/content/runs/detect/train3/val_batch0_pred.jpg", width=600)

Image("/content/runs/detect/train3/val_batch1_pred.jpg", width=600)

Image("/content/runs/detect/train3/val_batch2_pred.jpg", width=600)

"""**Step # 06 Download the Model Weights from the Google Drive**"""

!gdown "https://drive.google.com/uc?id=1iuIB_3vKBunhyxEPhuecWPAWgVY71BNF&confirm=t"

"""**Step # 07  Validate Fine-Tuned Model**"""

!yolo task=detect mode=val model="best.pt" data={dataset.location}/data.yaml

"""**Step # 08 Inference with Custom Model on Images**"""

!yolo task=detect mode=predict model= best.pt conf=0.25 source={dataset.location}/test/images save=True

import glob
import os
from IPython.display import Image as IPyImage, display

latest_folder = max(glob.glob('/content/runs/detect/predict*/'), key=os.path.getmtime)
for img in glob.glob(f'{latest_folder}/*.jpg')[1:4]:
    display(IPyImage(filename=img, width=600))
    print("\n")

!gdown "https://drive.google.com/uc?id=1ACZp9gmtjEdIY-SHp8K0xdR0D8Gjd3j3&confirm=t"

!yolo task=detect mode=predict model= best.pt conf=0.25 source=image2.jpg save=True

Image("/content/runs/detect/predict2/image2.jpg", width=600)

"""**Step # 08 Inference with Custom Model on Videos**"""

!gdown "https://drive.google.com/uc?id=1Nyl18zr7zOJHh8uHtSic3dsJSY4LI_t-&confirm=t"

!gdown "https://drive.google.com/uc?id=1SxcrDanPAr-PZfJjWBxoa2t8lUSM2dZn&confirm=t"

!yolo task=detect mode=predict model= best.pt conf=0.25 source="PPE_Part1.mp4" save=True

!rm '/content/result_compressed.mp4'

from IPython.display import HTML
from base64 import b64encode
import os

# Input video path
save_path = '/content/runs/detect/predict3/PPE_Part1.avi'

# Compressed video path
compressed_path = "/content/result_compressed.mp4"

os.system(f"ffmpeg -i {save_path} -vcodec libx264 {compressed_path}")

# Show video
mp4 = open(compressed_path,'rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML("""
<video width=400 controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)

!yolo task=detect mode=predict model=best.pt conf=0.25 source="PPE_Part2.mp4" save=True

!rm '/content/result_compressed.mp4'

from IPython.display import HTML
from base64 import b64encode
import os

# Input video path
save_path = '/content/runs/detect/predict4/PPE_Part2.avi'

# Compressed video path
compressed_path = "/content/result_compressed.mp4"

os.system(f"ffmpeg -i {save_path} -vcodec libx264 {compressed_path}")

# Show video
mp4 = open(compressed_path,'rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML("""
<video width=400 controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)

